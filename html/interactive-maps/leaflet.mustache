<!DOCTYPE html>
<html>
  <head>
    <title>{{titleName}}</title>
    <meta charset="utf-8" />
    <meta http-equiv="content-type" content="text/html;charset=utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/l.geosearch.css" />
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5/leaflet.css" />
    <!--[if lte IE 8]>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5/leaflet.ie.css" />
    <![endif]-->

    <script src="http://cdn.leafletjs.com/leaflet-0.5/leaflet.js"></script>


    <style>
      html, body {
          height: 100%;
      }

      .social-buttons {
          display:block;
          list-style:none;
          padding:0px;
          margin:4px 0 0 0px;
          float:right;
      }

      li {
          margin-top:5px;
      }

      #map {
          width: 100% !important;
          height: 100% !important;
      }

      .info {
          padding: 6px 8px;
          font: 14px/16px Arial, Helvetica, sans-serif;
          background: white;
          background: rgba(255,255,255,0.8);
          box-shadow: 0 0 15px rgba(0,0,0,0.2);
          border-radius: 9px;
      }
      .info h4 {
          margin: 0 0 0px;
          color: #777;
      }

      .info div{margin:0 0 5px;}


      body.hom .info div.hom,
      body.rncv .info div.rncv,
      body.rvcv .info div.rvcv,
      body.rvsv .info div.rvsv{
          background:#F6E493;
          color:#000;
          border-radius: 3px;
      }

    </style>
  </head>
  <body class="{{varName}}">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script src="http://d3js.org/topojson.v0.min.js"></script>
    <script type="text/javascript" src="js/chroma.min.js"></script>
    <script src="js/l.control.geosearch.js"></script>
    <script src="js/l.geosearch.provider.google.js"></script>
    <script src="js/d3.v3.min.js"></script>
    <div id="map"></div>






    <hr/>
    <ul class='social-buttons'>
      <li style="margin:10px 0px 10px 0">
        <a class='twitter-share-button'  data-count='vertical' data-related='diegovalle' data-via='diegovalle' data-text='Map of the 2012 Mexican Election' href='https://twitter.com/share'>
        </a>
      </li>
      <li>
        <div id='fb-root'></div>
        <div class='fb-like' data-colorscheme='light' data-layout='box_count' data-show-faces='false' data-width='40' href='http://www.diegovalle.net/mordor'></div>
      </li>
    </ul>


    <script type="text/javascript">
      //The map
      var mxc;

      //return a color scale for the choropleths
      var createScale = function(colors, domain, numcol){
          return chroma.scale(colors).domain(domain, numcol);
      };

      //Color scales borrowed from colorbrewer
      var YlOrRd = ["#FFFFCC", "#FFEDA0",
                    "#FED976", "#FEB24C",
                    "#FD8D3C", "#FC4E2A",
                    "#E31A1C", "#BD0026", "#800026"],
          RdBu = ["#2166AC", "#4393C3", "#92C5DE", "#D1E5F0", "#F7F7F7", "#FDDBC7",
                  "#F4A582", "#D6604D", "#B2182B"];

       var scaleHomicide,
          scaleRNCV,
          scaleRVCV,
          scaleRVSV;
      

      //remember this is a mustache template
      var scaleFun;
      var varName = "{{varName}}";
      var title = "{{titleName}}";

      //use the appropiate scale from the template
      var getColor;



      var nokiaStreets = L.tileLayer('http://{s}.maptile.maps.svc.ovi.com/maptiler/v2/maptile/newest/normal.day.grey/{z}/{x}/{y}/256/png8', {
          attribution: '©2012 Nokia <a href="http://here.net/services/terms" target="_blank">Terms of use</a>'
      }),
          nokiaSat = L.tileLayer('http://{s}.maptile.maps.svc.ovi.com/maptiler/v2/maptile/newest/satellite.day/{z}/{x}/{y}/256/png8', {
              attribution: '©2012 Nokia <a href="http://here.net/services/terms" target="_blank">Terms of use</a>'
          })
      var map = L.map('map', {center: new L.LatLng(19.38, -99.1),
                              zoom: 11,
                              layers: [nokiaSat, nokiaStreets]});

      var baseMaps = {
          "Satellite": nokiaSat,
          "Streets": nokiaStreets
      };
      

      L.control.layers(baseMaps).addTo(map);

    //add a geosearch control
   // new L.Control.GeoSearch({
    //  provider: new L.GeoSearch.Provider.Google()
   // }).addTo(map);

    // control that shows state info on hover
    var info = L.control();

    info.onAdd = function (map) {
      this._div = L.DomUtil.create('div', 'info');
      this.update();
      return this._div;
    };

      info.update = function (props) {
    this._div.innerHTML = '<h1>'+title+'</h1>' + '<h3>' + (props ? props.sector : '&nbsp;') +'</h3>' + '<div><h4>Total Population</h4>' +  (props ?
                                                                                      '' + props.population
                                                                                      : 'Hover over a Polygon') +
        '</div><div class="hom"><h4><a href="homicide.html">Homicides</a></h4>' +  (props ?
                                                                                                                    '' + props.hom
                                                                                                                    : '&nbsp;') +
        '</div><div class="rncv"><h4><a href="rncv.html">Violent robberies to a business</a> </h4>' +  (props ?
                                                                                              '' + props.rncv
                                                                                              : '&nbsp;') +
        '</div><div class="rvcv"><h4><a href="rvcv.html">Violent car robberies</a> </h4>' +  (props ?
                                                                                                                              '' + props.rvcv + ""
                                                                                                                              : '&nbsp;') +
        '</div><div class="rvsv"><h4><a href="rvsv.html">Non-violent car robberies</a> </h4>' +  (props ?
                                                                                                               '' + props.rvsv + ''
                                                                                                               : '&nbsp;') + '</div>'
      ;
    };

    info.addTo(map);


    var getStyle = function(feature) {
      return {
        fillColor: getColor(feature.properties[varName]),
              weight: .1,
              opacity: 1,
              color: '#ddd',
              fillOpacity: 0.8
      };

    };

    function highlightFeature(e) {
      var layer = e.target;

      layer.setStyle({
        fillColor: 'transparent',
        weight: .6,
        color: 'black'

      });

    if (!L.Browser.ie && !L.Browser.opera) {
        layer.bringToFront();
      }

      info.update(layer.feature.properties);
    }

    function resetHighlight(e) {
      mxc.resetStyle(e.target);
      info.update();
    }

    function onEachFeature(feature, layer) {
      layer.on({
        mouseover: highlightFeature,
        mouseout: resetHighlight
      });
    }

    $.getJSON('js/sectores.json', function (data) {
              var mxcGeojson = topojson.object(data, data.objects.sectores);

      var featureCollection = {
        "type": "FeatureCollection",
        "features": []
      };

      for (var i = 0; i <  mxcGeojson.geometries.length; i++) {
        featureCollection.features.push({
          "type":"Feature",
          "geometry":  mxcGeojson.geometries[i],
          "properties":  mxcGeojson.geometries[i].properties
        });
      }

      findRange=function(mxcGeojson, name) {
            return(d3.extent(d3.entries(mxcGeojson.geometries), function(d){return(+d.value.properties[name])} ));
        }
      //The scales for the various maps
      scaleHomicide = createScale(chroma.brewer.Reds,
                                 findRange(mxcGeojson, '{{varName}}'), 9),
          scaleRNCV = createScale(chroma.brewer.Blues, findRange(mxcGeojson, '{{varName}}'), 9),
          scaleRVCV = createScale(chroma.brewer.Purples, findRange(mxcGeojson, '{{varName}}'), 9),
          scaleRVSV = createScale(chroma.brewer.Greens, findRange(mxcGeojson, '{{varName}}'), 9);
      getColor = function(value) {
          return scaleFun(value);
      };
      scaleFun = {{scaleFun}};

      // mxcLayer.addData(featureCollection);

      mxc = L.geoJson(featureCollection, {
        style: getStyle,
        onEachFeature: onEachFeature
      }).addTo(map);
    });


    </script>

    <script id="deferedjs" type="text/javascript">
    var _gaq=[['_setAccount','UA-100264-1'],['_trackPageview']]; // Change UA-XXXXX-X to be your site's ID
    (function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.async=1;
      g.src=('https:'==location.protocol?'//ssl':'//www')+'.google-analytics.com/ga.js';
      s.parentNode.insertBefore(g,s)}(document,'script'));
    _gaq.push(['_setSiteSpeedSampleRate', 5]);  //Measure Page Speed

    </script>

    <!--[if lt IE 9 ]>
    <script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1.0.2/CFInstall.min.js"></script>
    <script>window.attachEvent("onload",function(){CFInstall.check({mode:"overlay"})})</script>
    <![endif]-->
</body>
</html>
