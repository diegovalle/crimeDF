<!DOCTYPE html>
<html>
  <head>
    <title>{{titleName}}</title>
    <meta charset="utf-8" />
    <meta http-equiv="content-type" content="text/html;charset=utf-8"/>
    <meta name="viewport" content="width=device-width">
    <link rel="stylesheet" href="css/l.geosearch.css" />
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.css" />
    <!--[if lte IE 8]>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5/leaflet.ie.css" />
    <![endif]-->

    <script src="http://cdn.leafletjs.com/leaflet-0.7.2/leaflet.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script src="js/topojson.v1.min.js"></script>
    <script type="text/javascript" src="js/chroma.min.js"></script>
    <script src="js/l.control.geosearch.js"></script>
    <script src="js/l.geosearch.provider.google.js"></script>
    <script src="js/d3.v3.min.js"></script>

    <style>
      html, body {
      height: 100%;
      }

      
      body {
margin: 0px;
padding: 0px;
height: 100%;
}

      .social-buttons {
          display:block;
          list-style:none;
          padding:0px;
          margin:4px 0 0 0px;
          float:right;
      }

      li {
          margin-top:5px;
      }

      #content {
         margin-right: auto;
         margin-left: auto;
         height: 100%;
      }

      #map {
         height: 100%;
      }

      .info {
          padding: 6px 8px;
          font: 14px/16px Arial, Helvetica, sans-serif;
          background: white;
          background: rgba(255,255,255,0.8);
          box-shadow: 0 0 15px rgba(0,0,0,0.2);
          border-radius: 9px;
      }
      .info h4 {
          margin: 0 0 0px;
          color: #777;
      }

      .info div{margin:0 0 5px;}


      body.hom_rate .info div.hom,
      body.hom_count .info div.hom,
      body.rncv_rate .info div.rncv,
      body.rncv_count .info div.rncv,
      body.rvcv_rate .info div.rvcv,
      body.rvcv_count .info div.rvcv,
      body.rvsv_rate .info div.rvsv,
      body.rvsv_count .info div.rvsv {
          background:#F6E493;
          color:#000;
          border-radius: 3px;
      }
.legend {
    line-height: 18px;
    color: #555;
}
.legend i {
    width: 18px;
    height: 18px;
    float: left;
    margin-right: 8px;
    opacity: 0.7;
}
    </style>
  </head>
  <body class="{{varName}}">
    <div id="content" class="container">
      <div id="map"></div> <!-- <ul class='social-buttons'> -->
    </div>
    <!--   <li style="margin:10px 0px 10px 0"> -->
        
    <!--   </li> -->
    <!--   <li> -->
    <!--     <div id='fb-root'></div> -->
    <!--     <div class='fb-like' data-colorscheme='light' data-layout='box_count' data-show-faces='false' data-width='40' href='http://www.diegovalle.net/mordor'></div> -->
    <!--   </li> -->
    <!-- </ul> -->
    <script type="text/javascript">
      //The map
      var mxc;

      //return a color scale for the choropleths
      var createScale = function(colors, domain, numcol){
          return chroma.scale(colors).domain(domain, numcol);
      };

      

       var scaleHomicide,
          scaleRNCV,
          scaleRVCV,
          scaleRVSV;
      

      //remember this is a mustache template
      var scaleFun;
      var varName = "{{varName}}";
      var title = "{{titleName}}";

      //use the appropiate scale from the template
      var getColor;



      var nokiaStreets = L.tileLayer('http://{s}.maptile.maps.svc.ovi.com/maptiler/v2/maptile/newest/normal.night/{z}/{x}/{y}/256/png8', {
          attribution: '©2012 Nokia <a href="http://here.net/services/terms" target="_blank">Terms of use</a>'
      }),
          nokiaSat = L.tileLayer('http://{s}.maptile.maps.svc.ovi.com/maptiler/v2/maptile/newest/satellite.day/{z}/{x}/{y}/256/png8', {
              attribution: '©2012 Nokia <a href="http://here.net/services/terms" target="_blank">Terms of use</a>'
          })
      var map = L.map('map', {center: new L.LatLng(19.38, -99.1),
                              zoom: 11,
                              layers: [nokiaStreets]});

      var baseMaps = {
          "Satellite": nokiaSat,
          "Streets": nokiaStreets
      };
      
      

      L.control.layers(baseMaps).addTo(map);

    //add a geosearch control
   // new L.Control.GeoSearch({
    //  provider: new L.GeoSearch.Provider.Google()
   // }).addTo(map);

    // control that shows state info on hover
    var info = L.control();

    info.onAdd = function (map) {
      this._div = L.DomUtil.create('div', 'info');
      this.update();
      return this._div;
    };

      info.update = function (props) {
    this._div.innerHTML = '<h1>'+title+'</h1>' + '<h3>' + (props ? props.sector + ('{{level}}' === "sectores" ? "" : " / " + props.id) : '&nbsp;') +'</h3>' + '<div><h4>Total Population</h4>' +  (props ? '' + props.population : 'Hover over a Polygon') +
        '</div><div class="hom"><h4><a href="homicide-{{level}}.html">Homicides (<i>rate</i> / count)</a></h4><i>' +  (props ? '' + props.hom_rate : '&nbsp;') + '</i> / '  +  (props ? props.hom_count : '&nbsp;') +
        '</div><div class="rncv"><h4><a href="rncv-{{level}}.html">Violent robberies to a business  (<i>rate</i> / count)</a> </h4><i>' +  (props ? '' + props.rncv_rate : '&nbsp;') + '</i> / '  +  (props ? props.rncv_count : '&nbsp;') +
        '</div><div class="rvcv"><h4><a href="rvcv-{{level}}.html">Violent car robberies (<i>rate</i> / count)</a> </h4><i>' +  (props ? '' + props.rvcv_rate  : '&nbsp;') + '</i> / '  +  (props ? props.rvcv_count : '&nbsp;') +
        '</div><div class="rvsv"><h4><a href="rvsv-{{level}}.html">Non-violent car robberies (<i>rate</i> / count)</a> </h4><i>' +  (props ? props.rvsv_rate  : '&nbsp;') + '</i> / '  +  (props ? props.rvsv_count : '&nbsp;') +'</div>'
    };

    info.addTo(map);


    var getStyle = function(feature) {
      return {
        fillColor: getColor(feature.properties[varName]),
              weight: .1,
              opacity: 1,
              color: '#ddd',
              fillOpacity: 0.8
      };

    };

    function highlightFeature(e) {
      var layer = e.target;

      layer.setStyle({
        fillColor: 'transparent',
        weight: .6,
        color: 'black'

      });

    if (!L.Browser.ie && !L.Browser.opera) {
        layer.bringToFront();
      }

      info.update(layer.feature.properties);
    }

    function resetHighlight(e) {
      mxc.resetStyle(e.target);
      info.update();
    }

    function onEachFeature(feature, layer) {
      layer.on({
        mouseover: highlightFeature,
        mouseout: resetHighlight
      });
    }

    $.getJSON('js/{{level}}-map.json', function (data) {
              var mxcGeojson = topojson.feature(data, data.objects.{{level}}).features;

      var featureCollection = {
        "type": "FeatureCollection",
        "features": []
      };

      for (var i = 0; i <  mxcGeojson.length; i++) {
        featureCollection.features.push({
          "type":"Feature",
          "geometry":  mxcGeojson[i].geometry,
          "properties":  mxcGeojson[i].properties
        });
      }

      findRange=function(mxcGeojson, name) {
            return(d3.extent(d3.entries(mxcGeojson), function(d){return(+d.value.properties[name])} ));
        }
      //The scales for the various maps
      scaleHomicide = createScale(chroma.brewer.Reds,
                                 findRange(mxcGeojson, '{{varName}}'), 9),
          scaleRNCV = createScale(chroma.brewer.Blues, findRange(mxcGeojson, '{{varName}}'), 9),
          scaleRVCV = createScale(chroma.brewer.Purples, findRange(mxcGeojson, '{{varName}}'), 9),
          scaleRVSV = createScale(chroma.brewer.Greens, findRange(mxcGeojson, '{{varName}}'), 9);
      getColor = function(value) {
          return scaleFun(value);
      };
      scaleFun = {{scaleFun}};

      // mxcLayer.addData(featureCollection);

      mxc = L.geoJson(featureCollection, {
        style: getStyle,
        onEachFeature: onEachFeature
      }).addTo(map);
    });
                         //  var legend = L.control({position: 'bottomright'});

   //legend.onAdd = function (map) {

   // var div = L.DomUtil.create('div', 'info legend'),
  //      grades = [0, 10, 20, 50, 100, 200, 500, 1000],
  //      labels = [];
 //   var r = colorFun.invertExtent(d);
 //           return d3.round(r[0], 0)
    // loop through our density intervals and generate a label with a colored square for each interval
 //   for (var i = 0; i < grades.length; i++) {
 //       div.innerHTML +=
 //           '<i style="background:' + (chroma.brewer.Reds[i]) + '"></i> ' +
 //           grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
 //   }

//     return div; 
//};

legend.addTo(map);

    </script>

    <script id="deferedjs" type="text/javascript">
    var _gaq=[['_setAccount','UA-100264-1'],['_trackPageview']]; // Change UA-XXXXX-X to be your site's ID
    (function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.async=1;
      g.src=('https:'==location.protocol?'//ssl':'//www')+'.google-analytics.com/ga.js';
      s.parentNode.insertBefore(g,s)}(document,'script'));
    _gaq.push(['_setSiteSpeedSampleRate', 5]);  //Measure Page Speed

    </script>

    <!--[if lt IE 9 ]>
    <script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1.0.2/CFInstall.min.js"></script>
    <script>window.attachEvent("onload",function(){CFInstall.check({mode:"overlay"})})</script>
    <![endif]-->
</body>
</html>
