<!DOCTYPE html>
<html>
  <head>
    <title>{{titleName}}</title>
    <meta charset="utf-8" />
    <meta http-equiv="content-type" content="text/html;charset=utf-8"/>
    <meta name="viewport" content="width=device-width">
    <link rel="stylesheet" href="css/l.geosearch.css" />
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
    <!--[if lte IE 8]>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.ie.css" />
    <![endif]-->

    <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script src="js/topojson.v1.min.js"></script>
    <script src="js/l.control.geosearch.js"></script>
    <script src="js/l.geosearch.provider.google.js"></script>
    <script src="js/d3.v3.min.js"></script>
    <script src="js/colorbrewer.js"></script>
    <style>
    .tg  {width:100%;border-collapse:collapse;border-spacing:0;border-color:#ccc;border-width:1px;border-style:solid;}
    .tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:0px;overflow:hidden;word-break:normal;border-color:#ccc;color:#333;background-color:#fff;}
    .tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:0px;overflow:hidden;word-break:normal;border-color:#ccc;color:#333;background-color:#f0f0f0;}
    .tg .tg-4eph{background-color:#f9f9f9}
    .crime_name{width:60%} 
    .crime_count{width:20%}
    .crime_rate{width:20%}

    select {
        font-size: 24px;
    }
      html, body {
      height: 100%;
      }

      
      body {
margin: 0px;
padding: 0px;
height: 100%;
}

      .social-buttons {
          display:block;
          list-style:none;
          padding:0px;
          margin:4px 0 0 0px;
          float:right;
      }

      li {
          margin-top:5px;
      }

      #content {
         margin-right: auto;
         margin-left: auto;
         height: 100%;
      }

      #map {
         height: 100%;
      }

      .info {
          padding: 6px 8px;
          font: 14px/16px Arial, Helvetica, sans-serif;
          background: white;
          background: rgba(255,255,255,0.8);
          box-shadow: 0 0 15px rgba(0,0,0,0.2);
          border-radius: 9px;
      }
      .info h4 {
          margin: 0 0 0px;
          color: #333;
      }

      .info div{margin:0 0 5px;}


      body.hom_rate .info div.hom,
      body.hom_count .info div.hom,
      body.rncv_rate .info div.rncv,
      body.rncv_count .info div.rncv,
      body.rvcv_rate .info div.rvcv,
      body.rvcv_count .info div.rvcv,
      body.rvsv_rate .info div.rvsv,
      body.rvsv_count .info div.rvsv {
          //background:#F6E493;
          //color:#000;
          //border-radius: 3px;
      }
.legend {
    line-height: 18px;
    color: #555;
}
.legend i {
    width: 18px;
    height: 18px;
    float: left;
    margin-right: 8px;
    opacity: 0.7;
}
    </style>
  </head>
  <body class="{{varName}}">
    <div id="content" class="container">
      <div id="map"></div> <!-- <ul class='social-buttons'> -->
    </div>
    <!--   <li style="margin:10px 0px 10px 0"> -->
        
    <!--   </li> -->
    <!--   <li> -->
    <!--     <div id='fb-root'></div> -->
    <!--     <div class='fb-like' data-colorscheme='light' data-layout='box_count' data-show-faces='false' data-width='40' href='http://www.diegovalle.net/mordor'></div> -->
    <!--   </li> -->
    <!-- </ul> -->
    <script type="text/javascript">
      //The map
    var mxc;

//return a color scale for the choropleths
var createScale = function(colors, domain, numcol){
    return chroma.scale(colors).domain(domain, numcol);
};
var createScale = function(colors, domain, numcol){
    return d3.scale.quantize()
           .domain(domain)
           .range(d3.range(numcol).map(function(i) { return colors[i] }));
}
//for formatting the population data
comma = d3.format("0,000");

var scaleHomicide,
scaleRNCV,
scaleRVCV,
scaleRVSV,
scaleVIOL;

//remember this is a mustache template
var varName = "{{varName}}";
var title = "{{titleName}}";
var config;

//use the appropiate scale from the template
var getColor;

var nokiaStreets = L.tileLayer('http://{s}.{base}.maps.cit.api.here.com/maptile/2.1/maptile/{mapID}/normal.night/{z}/{x}/{y}/256/png8?app_id={app_id}&app_code={app_code}', {
    attribution: 'Map &copy; 1987-2014 <a href="http://developer.here.com">HERE</a>',
    subdomains: '1234',
    mapID: 'newest',
    app_id: '6nA3IVXYrizzTDgFJMIN',
    app_code: '6o4Vvdk1QIkytF-bmyH_Yg',
    base: 'base',
    minZoom: 0,
    maxZoom: 20
});
var nokiaSat = L.tileLayer('http://{s}.{base}.maps.cit.api.here.com/maptile/2.1/maptile/{mapID}/satellite.day/{z}/{x}/{y}/256/png8?app_id={app_id}&app_code={app_code}', {
    attribution: 'Map &copy; 1987-2014 <a href="http://developer.here.com">HERE</a>',
    subdomains: '1234',
    mapID: 'newest',
    app_id: '6nA3IVXYrizzTDgFJMIN',
    app_code: '6o4Vvdk1QIkytF-bmyH_Yg',
    base: 'aerial',
    minZoom: 0,
    maxZoom: 20
});

// var nokiaStreets = L.tileLayer('http://{s}.maptile.maps.svc.ovi.com/maptiler/v2/maptile/newest/normal.night/{z}/{x}/{y}/256/png8', {
//     attribution: '©2012 Nokia <a href="http://here.net/services/terms" target="_blank">Terms of use</a>'
// }),
// nokiaSat = L.tileLayer('http://{s}.maptile.maps.svc.ovi.com/maptiler/v2/maptile/newest/satellite.day/{z}/{x}/{y}/256/png8', {
//     attribution: '©2012 Nokia <a href="http://here.net/services/terms" target="_blank">Terms of use</a>'
// })
var map = L.map('map', {center: new L.LatLng(19.38, -99.1),
                        zoom: 11,
                        layers: [nokiaStreets]});

var baseMaps = {
    "Satellite": nokiaSat,
    "Streets": nokiaStreets
};





//add a geosearch control
// new L.Control.GeoSearch({
//  provider: new L.GeoSearch.Provider.Google()
// }).addTo(map);

// control that shows state info on hover
var info = L.control();
var legend = L.control({position: 'bottomright'});


info.onAdd = function (map) {
    this._div = L.DomUtil.create('div', 'info');
    this.update();
    //document.getElementById("seltarget").onmouseover = controlEnter;
    //document.getElementById("seltarget").onmouseout = controlLeave;  
    return this._div;
    };

legend.onAdd = function (map) {
    this._div = L.DomUtil.create('div', 'info legend');
    this.update();
    //document.getElementById("seltarget").onmouseover = controlEnter;
    //document.getElementById("seltarget").onmouseout = controlLeave;  
    return this._div;
};

function controlEnter(e) {
    map.dragging.disable();
}
function controlLeave() {
    map.dragging.enable();
} 
setChange = function(){
    $("#seltarget").change(function() {
        $(config.selector).attr('style', '');
        changeConfig($("#seltarget").attr('value'))
        mxc.eachLayer(function(layer) {
            layer.setStyle({
                fillColor: config.colorFun(layer.feature.
                                           properties[config.currentName]),
                fillOpacity: 0.8,
                weight: 0.5
            });    
        });
        for(i = 0; i < 9; i++) {
            $("#legendnum" + i).html(
                '<i style="background:' + config.color[i] + '"></i>' +
                    config.round1(config.colorFun.
                                  invertExtent(config.color[i])[0], 1) +" - " +  
                    config.round2(config.colorFun.
                                  invertExtent(config.color[i])[1], 1)
            );
        }
        $(config.selector).css('background-color', config.color[2]);
    });
}   


changeConfig = function(seltarget) {
    switch(seltarget) {
        case "Homicide":
            config.colorFun =  scaleHomicide;
            config.color = colorbrewer.Reds["9"];
            config.currentName ="hom" + '{{type}}';
            config.lastSelect = "Homicide";
            config.selector = ".homicides";
            break;
        case "Violent robberies to a business":
            config.colorFun =  scaleRNCV;
            config.color = colorbrewer.Blues["9"];
            config.currentName = "rncv" + '{{type}}';
            config.lastSelect = "Violent robberies to a business";
            config.selector = ".rncv";
            break;
        case "Violent car robberies":
            config.colorFun =  scaleRVCV;
            config.color = colorbrewer.Purples["9"];
            config.currentName = "rvcv" + '{{type}}';
            config.lastSelect = "Violent car robberies";
            config.selector = ".rvcv";
            break;
        case "Non-violent car robberies":
            config.colorFun =  scaleRVSV;
            config.color = colorbrewer.Greens["9"];
            config.currentName = "rvsv" + '{{type}}';
            config.lastSelect = "Non-violent car robberies";
            config.selector = ".rvsv";
            break;
        case "Rape":
            config.colorFun =  scaleVIOL;
            config.color = colorbrewer.Greys["9"];
            config.currentName = "viol" + '{{type}}';
            config.lastSelect = "Rape";
            config.selector = ".viol";
            break;
        }
}

info.update = function (props) {
    var div;
    config.color = colorbrewer.Reds["9"];
    div = '<div id="variables" class="menu-ui"><select id="seltarget" autofocus><option value="Homicide">Homicide</option><option value="Violent robberies to a business">Violent robberies to a business</option><option value="Violent car robberies">Violent car robberies</option><option value="Non-violent car robberies">Non-violent car robberies</option><option value="Rape">Rape</option></select></div><h1>'+
        title + '</h1><h3>' +
        (props ? props.sector + ('{{level}}' === "sectores" ? "" : " / " + props.id) : 'DF (Aug 13 - Jul 14)') +'</h3>' + '<div><h4>Total Population: ' +  (props ? '' + comma(props.population) : '8,785,874') +
        '</h4></div>' +
        '<table class="tg">' +
        '<tr>' +
        '<th class="tg-031e"></th>' +
        '<th class="tg-031e">Rate</th>' +
        '<th class="tg-031e">Count</th>' +
        '</tr>' +
        '<tr>' +
        '<td class="crime_name homicides tg-031e">Homicides</td>' +
        '<td class="crime_rate tg-031e' + ('{{level}}' === "sectores" ? " homicides " : "")  + '">' + (props ? '' + props.hom_rate : homTotalRate) +'</td>' +
        '<td class="crime_count tg-031e' + ('{{level}}' === "sectores" ? "" : " homicides ")  + '">' + (props ? comma(props.hom_count) : comma(homTotal)) +'</td>' +
        '</tr>' +
        '<tr>' +
        '<td class="crime_name rncv tg-4eph">Violent robberies to a business</td>' +
        '<td class="tg-4eph' + ('{{level}}' === "sectores" ? " rncv " : "")  + '">' + (props ? '' + props.rncv_rate : rncvTotalRate) +'</td>' +
        '<td class="tg-4eph' + ('{{level}}' === "sectores" ? "" : " rncv ")  + '">' + (props ? comma(props.rncv_count) : comma(rncvTotal)) +'</td>' +
        '</tr>' +
        '<tr>' +
        '<td class="crime_name rvcv tg-031e">Violent car robberies</td>' +
        '<td class="tg-031e' + ('{{level}}' === "sectores" ? " rvcv " : "")  + '">' + (props ? '' + props.rvcv_rate  : rvcvTotalRate) +'</td>' +
        '<td class="tg-031e' + ('{{level}}' === "sectores" ? "" : " rvcv ")  + '">' + (props ? comma(props.rvcv_count) : comma(rvcvTotal)) +'</td>' +
        '</tr>' +
        '<tr>' +
        '<td class="crime_name rvsv tg-4eph">Non-violent car robberies</td>' +
        '<td class="tg-4eph' + ('{{level}}' === "sectores" ? " rvsv " : "")  + '">' + (props ? props.rvsv_rate  : rvsvTotalRate) +'</td>' +
        '<td class="tg-4eph' + ('{{level}}' === "sectores" ? "" : " rvsv ")  + '">' + (props ? comma(props.rvsv_count) : comma(rvsvTotal)) +'</td>' +
        '</tr>' +
        '<tr>' +
        '<td class="crime_name viol tg-4eph">Rape</td>' +
        '<td class="tg-031e' + ('{{level}}' === "sectores" ? " viol " : "")  + '">' + (props ? props.viol_rate  : violTotalRate) +'</td>' +
        '<td class="tg-031e' + ('{{level}}' === "sectores" ? "" : " viol ")  + '">' + (props ? comma(props.viol_count) : comma(violTotal)) +'</td>' +
        '</tr>' +
        '</table><br/><div class="legend">';
    
    changeConfig($("#seltarget").attr('value')) 
    for(i = 0; i < 9; i++) {
        div  +=
            '<span id="legendnum' + 
            i +'">' + '<i style="background:' + config.color[i] + '"></i>' +
            config.round1(config.colorFun.
                          invertExtent(config.color[i])[0], 1) +" - " +  
            config.round2(config.colorFun.
                          invertExtent(config.color[i])[1], 1) +'</span><br>';
    }
    // don't leak
    $("#seltarget").remove();
    this._div.innerHTML = div + '</div>';
    $(config.selector).css('background-color',config.color[2]);
    $("#seltarget").val(config.lastSelect);
    setChange();
    
    if(document.getElementById("seltarget")) {
    document.getElementById("seltarget").onmouseover = controlEnter;
    document.getElementById("seltarget").onmouseout = controlLeave; 
    }

};




var getStyle = function(feature) {
    return {
        fillColor: config.colorFun(feature.properties[config.currentName]),
        weight: .5,
        opacity: 1,
        color: '#555',
        fillOpacity: 0.8
    };
    
};

function highlightFeature(e) {
    var layer = e.target;
    
    layer.setStyle({
        //fillColor: 'transparent',
        weight: 5,
        fillOpacity: 0.6,
        color: '#333'
        
    });
    
    if (!L.Browser.ie && !L.Browser.opera) {
       layer.bringToFront();
    }
    
    info.update(layer.feature.properties);
}

function resetHighlight(e) {
    //mxc.resetStyle(e.target);
    e.target.setStyle({
	fillColor: config.colorFun(e.target.feature.
                                   properties[config.currentName]),
        fillOpacity: 0.8,
        weight: 0.5,
        color: '#555'
    });
    info.update();
}

function onEachFeature(feature, layer) {
    layer.on({
        mouseover: highlightFeature,
        click: highlightFeature,
        mouseout: resetHighlight
    });
    
}




$.getJSON('js/{{level}}-map.json', function (data) {
                
    var mxcGeojson = topojson.feature(data, data.objects.{{level}}).features;
    
    var featureCollection = {
        "type": "FeatureCollection",
        "features": []
    };
    
    for (var i = 0; i <  mxcGeojson.length; i++) {
        featureCollection.features.push({
            "type":"Feature",
            "geometry":  mxcGeojson[i].geometry,
            "properties":  mxcGeojson[i].properties
        });
    }
    
    findRange=function(mxcGeojson, name) {
        return(d3.extent(d3.entries(mxcGeojson), function(d){return(+d.value.properties[name])} ));
    }
    //The scales for the various maps
    scaleHomicide = createScale(colorbrewer.Reds["9"],
                                findRange(mxcGeojson, 'hom' + '{{type}}'), 9),
    scaleRNCV = createScale(colorbrewer.Blues["9"], 
                            findRange(mxcGeojson, 'rncv' + '{{type}}'), 9),
    scaleRVCV = createScale(colorbrewer.Purples["9"], 
                            findRange(mxcGeojson, 'rvcv' + '{{type}}'), 9),
    scaleRVSV = createScale(colorbrewer.Greens["9"], 
                            findRange(mxcGeojson, 'rvsv' + '{{type}}'), 9);
    scaleVIOL = createScale(colorbrewer.Greys["9"], 
                            findRange(mxcGeojson, 'viol' + '{{type}}'), 9);
    getColor = function(value) {
        return scaleFun(value);
    };
    scaleFun = {{scaleFun}};
    //colorFun = scaleFun;
    config = {
        colorFun:  scaleFun,
        color: colorbrewer.Reds["9"],
        currentName: "hom" + '{{type}}',
        lastSelect: "Homicide",
        selector: ".homicides",
        round1: null,
        round2: null
    }
    if('{{level}}' != "sectores") { 
        config.round1 = Math.ceil;
        config.round2 = Math.floor;
    }
    else {
        config.round1 = d3.round;
        config.round2 = d3.round;
    }
    
    // mxcLayer.addData(featureCollection);
    
    mxc = L.geoJson(featureCollection, {
        style: getStyle,
        onEachFeature: onEachFeature
    }).addTo(map);
    
    //legend.addTo(map);
    info.addTo(map);
    info.update();
    document.getElementById("seltarget").onmouseover = controlEnter;
    document.getElementById("seltarget").onmouseout = controlLeave; 
    L.control.layers(null,baseMaps, {position: 'topleft'}).addTo(map);
});



homTotal = 823,rncvTotal = 3867,rvcvTotal = 6208,rvsvTotal = 10583,violTotal = 461,homTotalRate = 9.4,rncvTotalRate = 44,rvcvTotalRate = 70.7,rvsvTotalRate = 120.5,violTotalRate = 5.2;

// var $select = $('<select></select>')
//     .appendTo($('#variables'))
//     .on('change', function() {
//         setVariable($(this).val());
//     });
// var variables = [
//     'B06011002 - Born in state of residence',
//     'B06011003 - Born in other state of the United States',
//     'B06011004 - Native; born outside the United States'];
// for (var i = 0; i < variables.length; i++) {
//     //ranges[variables[i]] = { min: Infinity, max: -Infinity };
//     // Simultaneously, build the UI for selecting different
//     // ranges
//     $('<option></option>')
//         .text(variables[i])
//         .attr('value', variables[i])
//         .appendTo($select);
// }
</script>
    
   
    <script id="deferedjs" type="text/javascript">
    var _gaq=[['_setAccount','UA-100264-1'],['_trackPageview']]; // Change UA-XXXXX-X to be your site's ID
    (function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];g.async=1;
      g.src=('https:'==location.protocol?'//ssl':'//www')+'.google-analytics.com/ga.js';
      s.parentNode.insertBefore(g,s)}(document,'script'));
    _gaq.push(['_setSiteSpeedSampleRate', 5]);  //Measure Page Speed

    </script>

    <!--[if lt IE 9 ]>
    <script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1.0.2/CFInstall.min.js"></script>
    <script>window.attachEvent("onload",function(){CFInstall.check({mode:"overlay"})})</script>
    <![endif]-->
</body>
</html>
